nextflow_process {

    name "Test Process XENIUMRANGER_RENAME"
    script "../main.nf"
    process "XENIUMRANGER_RENAME"

    tag "modules"
    tag "modules_nfcore"
    tag "xeniumranger"
    tag "xeniumranger/rename"

    test("xeniumranger relabel") {

        when {

            process {
                """
                input[0] = path(params.test_data['mus_musculus']['10xgenomics']['xeniumranger']['xeniumbundle'], checkIfExists: true)
                input[1] = path(params.test_data['mus_musculus']['10xgenomics']['xeniumranger']['gene_panel'], checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(
                    process.out.versions,
                    process.out.outs.get(0).get(1).findAll { file(it).name !in [
                        'analysis_summary.html',
                        'cell_feature_matrix.h5',
                        'cell_feature_matrix.zarr.zip',
                        'barcodes.tsv.gz',
                        'features.tsv.gz',
                        'matrix.mtx.gz',
                        ]}
                    ).match()
                },
                { assert file(process.out.outs.get(0).get(1).find { file(it).name == 'analysis_summary.html' }).exists() },
                { assert file(process.out.outs.get(0).get(1).find { file(it).name == 'cell_feature_matrix.h5' }).exists() },
                { assert file(process.out.outs.get(0).get(1).find { file(it).name == 'cell_feature_matrix.zarr.zip' }).exists() },
                { assert file(process.out.outs.get(0).get(1).find { file(it).name == 'barcodes.tsv.gz' }).exists() },
                { assert file(process.out.outs.get(0).get(1).find { file(it).name == 'features.tsv.gz' }).exists() },
                { assert file(process.out.outs.get(0).get(1).find { file(it).name == 'matrix.mtx.gz' }).exists() }
            )
        }
    }

    test("xeniumranger relabel -stub") {

        options "-stub"

        when {

            process {
                """
                input[0] = path(params.test_data['mus_musculus']['10xgenomics']['xeniumranger']['xenium_bundle'], checkIfExists: true)
                input[1] = path(params.test_data['mus_musculus']['10xgenomics']['xeniumranger']['gene_panel'], checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}